# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2022-11-03 03:55:05 krylon>
#
#+TAGS: optimize(o) refactor(r) bug(b) feature(f) architecture(a)
#+TAGS: web(w) database(d) javascript(j)
#+TODO: TODO(t) IMPLEMENT(i) TEST(e) RESEARCH(r) | DONE(d)
#+TODO: MEDITATE(m) PLANNING(p) REFINE(n) | FAILED(f) CANCELLED(c) SUSPENDED(s)
#+TODO: EXPERIMENT(x) |
#+PRIORITIES: A G D

* Guang
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 20
   #+CAPTION: Clock summary at [2022-11-03 Do 03:54]
   | Headline                        | Time      |         |       |       |      |
   |---------------------------------+-----------+---------+-------+-------+------|
   | *Total time*                    | *1d 3:44* |         |       |       |      |
   |---------------------------------+-----------+---------+-------+-------+------|
   | Guang                           | 1d 3:44   |         |       |       |      |
   | \_  Components                  |           | 1d 3:44 |       |       |      |
   | \_    Database                  |           |         |  0:58 |       |      |
   | \_      SQLite                  |           |         |       |  0:44 |      |
   | \_      Pool                    |           |         |       |  0:11 |      |
   | \_      Major cleanup [2/2]     |           |         |       |  0:03 |      |
   | \_        Package               |           |         |       |       | 0:03 |
   | \_    Web interface [2/4]       |           |         | 16:21 |       |      |
   | \_      Major overhaul [1/3]    |           |         |       | 12:06 |      |
   | \_        Live updates          |           |         |       |       | 7:58 |
   | \_        Bootstrap and friends |           |         |       |       | 4:08 |
   | \_      Embed                   |           |         |       |  4:15 |      |
   | \_    Refactoring [2/2]         |           |         | 10:25 |       |      |
   | \_      Packages                |           |         |       |  7:38 |      |
   | \_      Linter                  |           |         |       |  2:47 |      |
   #+END:
** Diary
*** [2022-10-26 Mi 15:56]
    I haven't touched this code in a pretty long time, before I can move on,
    I'm going to reorganize it so it conforms to the layout I used in my more
    recent projects, plus the web interface is going to need *a lot* of work.
** Components
*** Database
**** DONE SQLite
     CLOSED: [2022-10-27 Do 18:36]
     :LOGBOOK:
     CLOCK: [2022-10-27 Do 17:52]--[2022-10-27 Do 18:36] =>  0:44
     :END:
     The library I use for the SQLite bindings is kind of out of date, I think
**** DONE Pool
     CLOSED: [2022-10-31 Mo 19:49]
     :LOGBOOK:
     CLOCK: [2022-10-31 Mo 19:38]--[2022-10-31 Mo 19:49] =>  0:11
     :END:
     The web frontend still uses a sync.Pool. Let's fix that.
**** Major cleanup [2/2]                                           :refactor:
     I need to fix/refactor a couple of things.
***** DONE Package
      CLOSED: [2022-10-27 Do 19:45]
      :LOGBOOK:
      CLOCK: [2022-10-27 Do 19:41]--[2022-10-27 Do 19:44] =>  0:03
      :END:
      I need to move the database into a separate package
***** DONE Names
      CLOSED: [2022-10-31 Mo 19:57]
      I need to change a bunch of names.
*** Web interface [2/4]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
**** Major overhaul [1/3]
     The web interface is in dire need of a makeover. I'm not a very
     proficient web developer, but I was even less so when I first wrote this
     baby, and it is ... embarrassing to look at.
***** TODO Live updates
      :LOGBOOK:
      CLOCK: [2022-11-02 Mi 19:56]--[2022-11-03 Do 03:54] =>  7:58
      :END:
      I want to update the web interface continually as the backend is running.
***** TODO Knobs and Switches
      I want to be able to basically micro-manage the backend from the web
      interface. For starts, I want to spawn or discard worker goroutines for
      the various components on the fly. I have done /a little/ preliminary
      work for that, but it needs a whole lot of follow-through.
***** DONE Bootstrap and friends
      CLOSED: [2022-11-02 Mi 19:54]
      :LOGBOOK:
      CLOCK: [2022-10-31 Mo 22:57]--[2022-11-01 Di 02:51] =>  3:54
      CLOCK: [2022-10-31 Mo 20:44]--[2022-10-31 Mo 20:58] =>  0:14
      :END:
      In my more recent Go projects, I had some kind of scaffolding for the
      web interface that I would like to import.
**** DONE Embed
     CLOSED: [2022-10-26 Mi 20:42]
     :LOGBOOK:
     CLOCK: [2022-10-26 Mi 16:27]--[2022-10-26 Mi 20:42] =>  4:15
     :END:
     I use a Perl script to roll all of my assets into a Go variable, which
     became unneccessary when Go gained go:embed. Still need to make a few
     adjustments to make that step, then I can remove the script.
*** Refactoring [2/2]                                              :refactor:
**** DONE Packages
     CLOSED: [2022-10-31 Mo 19:57]
     :LOGBOOK:
     CLOCK: [2022-10-29 Sa 18:01]--[2022-10-30 So 00:33] =>  6:32
     CLOCK: [2022-10-27 Do 19:45]--[2022-10-27 Do 20:51] =>  1:06
     :END:
     I need break up the application into more packages, the current state is
     just repulsive from an aesthetic perspective.
**** DONE Linter
     CLOSED: [2022-10-31 Mo 19:24]
     :LOGBOOK:
     CLOCK: [2022-10-31 Mo 18:11]--[2022-10-31 Mo 19:24] =>  1:13
     CLOCK: [2022-10-30 So 20:25]--[2022-10-30 So 21:59] =>  1:34
     :END:
     Apparently I was not in the habit of using a linter when I wrote guang
     initially. So I have to do a lot of simple but tedious work to do.
** Bugs
